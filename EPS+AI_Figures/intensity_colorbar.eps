%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 8 Pro.
%%Title: C:\Users\Erinn Grigsby\Documents\GitHub\TMS-Code-Sommer-Lab\intensity_colorbar.eps
%%CreationDate: 03/06/2015  19:37:38
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    96   238   515   553
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    96   238   515   553
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1152 6636 csm

    0     0  5039  3780 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5040 3781 rf
6 w
0 -3081 3281 0 0 3081 655 283 4 MP
PP
-3281 0 0 -3081 3281 0 0 3081 655 283 5 MP stroke
gs 655 283 3282 3082 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00008f 00009f 0000af 0000bf 0000cf 0000df 0000ef 0000ff 000fff 001fff 
    002fff 003fff 004fff 005fff 006fff 007fff 008fff 009fff 00afff 00bfff 
    00cfff 00dfff 00efff 00ffff 0fffef 1fffdf 2fffcf 3fffbf 4fffaf 5fff9f 
    6fff8f 7fff7f 8fff6f 9fff5f afff4f bfff3f cfff2f dfff1f efff0f ffff00 
    ffef00 ffdf00 ffcf00 ffbf00 ffaf00 ff9f00 ff8f00 ff7f00 ff6f00 ff5f00 
    ff4f00 ff3f00 ff2f00 ff1f00 ff0f00 ff0000 ef0000 df0000 cf0000 bf0000 
    af0000 9f0000 8f0000 7f0000 
  >
] setcolorspace } bdef mwscm
gs np 655 283 mt 0 3081 rl 3281 0 rl 0 -3081 rl cp c np
[3281 0 0 3081 655 283] cc
<< % Image dictionary
  /ImageType 1
  /Width 1 /Height 1103
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [1.000000 0 0 1103.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
nhBr*!AH5,$j.V/&.nd_!B<(<+9MTD+<^YJrZD4A!;[i;5Q)].!!",a5<o&grW)m>rBL$!rVusA+T=V%
+T=S++<^X`q]Go(5PlQ(5<nrd!=/u1+::(f!!!QA+<W?l#lY\>#lYtD0`EI+&.f*Y&3iAr)#br^3;j[,
#RCD1(^LBi+?2=d#QOiY0H^Ap(^'gE&25g;56W_p+:')4r\t34-kHXi+<WX'&F2"T#RDOq5<fDZr#bu!
rYQ+n(aoqL!%8[<&-)ti+>Ed;%1"p!+?1bL!'`\%0H_M:0F0'L56)f+!'`^I+:17T56)fK!!",ar@n0]
!?_CA57[_o+<W?l&.fs,!!#5J!!*!@r]^hl0H`R[0H_K&59M'K!<,1h!!#5J+<UXa5<o*#(dC5-+?qPE
0JF%L!!",a0JF%L!'_SK0ED)+"!A^?0`:t[5<ghE59Kq[+94)<+Sd\s5;4bk!'`\%0`D(O562lLr\+jI
0E<4<5;4c6+92C+5;4ei+9sSS!!",q!&4@9&cb,r0H_Jl59KqK59M(&!%8sDr]^E++Smbo!!#5JrZD:C
!'`^G+T;?A0JNJcr]g96#Ts+30H^?[0Hg9I#Ts+$+94VK59TVQ$U6iu+>=ol-nm=T5PQo7+?ptKrZD4q
0`F9<0JFXK56*D:56;r]0`(kK+S[Yi57T@I+><d[5;3ok0F/d$5Q2c056*Ak+?ol*-j:_!0Glb\r?**d
#V[qL3"S:S!$EBi0Glb\56(sC0Glc/&.h&j!<+DF+:U"Y#REC$&1AA45<gh%r?,#e-l<d\3!^'D(cVd4
&25d\+92C+59M(&!!#5++92Bi-l<d\3!]d<-l<d\3!]dD0G"d[56([++>>J\&3iB%5<ghU&3iAZ+>>J\
&3iAZ+>>MK&H4@.!$Es,56)6Z!$EC<&3h9[0G$GK-l=oL0G$GK-l=oL-l='\rX]/r!!#"X#Rqmf0E=<[
&.gMq56rYsr?)>!0G"d[56(]_-it5F#lZOW&H4m#!!"Dq(`54l#RLA?r@e6p+T=S7!!"u<(`4YL#RCtQ
0JNGJ#<tEQ!$EBq&H4?c&.fs,r]g>]r]'lo#:Lu+#S93#0`EI&(`54lr<W?E%mN940G"dD-l<dc#REBi
!<"S^&.h&j!!",a-n#oL3&h0LrX])p5Q1Wh+<W'\(`54l#RGq
~>
gr
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 638 3407 mt 
( ) s
3920  325 mt 
( ) s
4 w
DO
SO
6 w
 655 3364 mt 3936 3364 L
 655  283 mt 3936  283 L
3936  283 mt 3936 3364 L
 655  283 mt  655 3364 L
 655 3364 mt 3936 3364 L
 655  283 mt  655 3364 L
 655 3364 mt  655 3331 L
 655  283 mt  655  315 L
 572 3509 mt 
(0.5) s
2295 3364 mt 2295 3331 L
2295  283 mt 2295  315 L
2262 3509 mt 
(1) s
3936 3364 mt 3936 3331 L
3936  283 mt 3936  315 L
3853 3509 mt 
(1.5) s
 655  560 mt  687  560 L
3936  560 mt 3903  560 L
 420  604 mt 
(100) s
 655  840 mt  687  840 L
3936  840 mt 3903  840 L
 420  884 mt 
(200) s
 655 1119 mt  687 1119 L
3936 1119 mt 3903 1119 L
 420 1163 mt 
(300) s
 655 1398 mt  687 1398 L
3936 1398 mt 3903 1398 L
 420 1442 mt 
(400) s
 655 1678 mt  687 1678 L
3936 1678 mt 3903 1678 L
 420 1722 mt 
(500) s
 655 1957 mt  687 1957 L
3936 1957 mt 3903 1957 L
 420 2001 mt 
(600) s
 655 2236 mt  687 2236 L
3936 2236 mt 3903 2236 L
 420 2280 mt 
(700) s
 655 2516 mt  687 2516 L
3936 2516 mt 3903 2516 L
 420 2560 mt 
(800) s
 655 2795 mt  687 2795 L
3936 2795 mt 3903 2795 L
 420 2839 mt 
(900) s
 655 3074 mt  687 3074 L
3936 3074 mt 3903 3074 L
 354 3118 mt 
(1000) s
 655 3354 mt  687 3354 L
3936 3354 mt 3903 3354 L
 354 3398 mt 
(1100) s
 655 3364 mt 3936 3364 L
 655  283 mt 3936  283 L
3936  283 mt 3936 3364 L
 655  283 mt  655 3364 L
1 sg
0 3083 240 0 0 -3083 4117 3365 4 MP
PP
-240 0 0 3083 240 0 0 -3083 4117 3365 5 MP stroke
gs 4117 283 241 3083 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00008f 00009f 0000af 0000bf 0000cf 0000df 0000ef 0000ff 000fff 001fff 
    002fff 003fff 004fff 005fff 006fff 007fff 008fff 009fff 00afff 00bfff 
    00cfff 00dfff 00efff 00ffff 0fffef 1fffdf 2fffcf 3fffbf 4fffaf 5fff9f 
    6fff8f 7fff7f 8fff6f 9fff5f afff4f bfff3f cfff2f dfff1f efff0f ffff00 
    ffef00 ffdf00 ffcf00 ffbf00 ffaf00 ff9f00 ff8f00 ff7f00 ff6f00 ff5f00 
    ff4f00 ff3f00 ff2f00 ff1f00 ff0f00 ff0000 ef0000 df0000 cf0000 bf0000 
    af0000 9f0000 8f0000 7f0000 
  >
] setcolorspace } bdef mwscm
gs np 4117 283 mt 0 3082 rl 240 0 rl 0 -3082 rl cp c np
[240 0 0 3082 4117 283] cc
<< % Image dictionary
  /ImageType 1
  /Width 1 /Height 64
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [1.000000 0 0 64.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
5<h=p4?GSa3&``Q1c$mA0J>%1/1W2!-mp>f,U4KV+<MXF*#fe6(`*r&'GD)k&.]6[$k!CK#R:P;"9S]+
!.Y
~>
gr
gr

4 w
DO
SO
6 w
0 sg
4117  282 mt 4357  282 L
4117 3365 mt 4357 3365 L
4357 3365 mt 4357  282 L
4117 3365 mt 4117  282 L
4117 3365 mt 4357 3365 L
4357 3365 mt 4357  282 L
4357 3365 mt 4326 3365 L
4117 3365 mt 4147 3365 L
4391 3409 mt 
(10) s
4357 2979 mt 4326 2979 L
4117 2979 mt 4147 2979 L
4391 3023 mt 
(20) s
4357 2594 mt 4326 2594 L
4117 2594 mt 4147 2594 L
4391 2638 mt 
(30) s
4357 2209 mt 4326 2209 L
4117 2209 mt 4147 2209 L
4391 2253 mt 
(40) s
4357 1824 mt 4326 1824 L
4117 1824 mt 4147 1824 L
4391 1868 mt 
(50) s
4357 1438 mt 4326 1438 L
4117 1438 mt 4147 1438 L
4391 1482 mt 
(60) s
4357 1053 mt 4326 1053 L
4117 1053 mt 4147 1053 L
4391 1097 mt 
(70) s
4357  668 mt 4326  668 L
4117  668 mt 4147  668 L
4391  712 mt 
(80) s
4357  283 mt 4326  283 L
4117  283 mt 4147  283 L
4391  327 mt 
(90) s
4117  282 mt 4357  282 L
4117 3365 mt 4357 3365 L
4357 3365 mt 4357  282 L
4117 3365 mt 4117  282 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
